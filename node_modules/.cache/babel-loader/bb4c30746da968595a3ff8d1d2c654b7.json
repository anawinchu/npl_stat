{"ast":null,"code":"import * as React from 'react';\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport SearchOutlined from \"@ant-design/icons/es/icons/SearchOutlined\";\nimport Input from '../input';\nexport default function Search(props) {\n  var _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      value = props.value,\n      prefixCls = props.prefixCls,\n      disabled = props.disabled,\n      onChange = props.onChange,\n      handleClear = props.handleClear;\n  var handleChange = React.useCallback(function (e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(e);\n  }, [onChange]);\n\n  var handleClearFn = function handleClearFn(e) {\n    e.preventDefault();\n\n    if (!disabled && handleClear) {\n      handleClear(e);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(Input, {\n      placeholder: placeholder,\n      className: prefixCls,\n      value: value,\n      onChange: handleChange,\n      disabled: disabled\n    }), value && value.length > 0 ?\n    /*#__PURE__*/\n    React.createElement(\"a\", {\n      className: \"\".concat(prefixCls, \"-action\"),\n      onClick: handleClearFn\n    },\n    /*#__PURE__*/\n    React.createElement(CloseCircleFilled, null)) :\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-action\")\n    },\n    /*#__PURE__*/\n    React.createElement(SearchOutlined, null)))\n  );\n}","map":null,"metadata":{},"sourceType":"module"}