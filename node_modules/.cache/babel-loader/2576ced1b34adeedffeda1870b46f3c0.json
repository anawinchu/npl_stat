{"ast":null,"code":"var _jsxFileName = \"/Users/anawin/Desktop/using-react-hooks-with-d3/src/App.js\";\nimport React, { useState, useEffect, PropTypes } from \"react\";\nimport { Doughnut, defaults } from 'react-chartjs-2';\nimport 'chartjs-plugin-datalabels';\nimport \"./App.css\";\nimport './styles.css';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nconst dataNivo = [{\n  id: \"japan\",\n  color: \"hsl(27, 70%, 50%)\",\n  data: [{\n    x: \"plane\",\n    y: 65\n  }, {\n    x: \"helicopter\",\n    y: 240\n  }, {\n    x: \"boat\",\n    y: 242\n  }, {\n    x: \"train\",\n    y: 13\n  }, {\n    x: \"subway\",\n    y: 81\n  }, {\n    x: \"bus\",\n    y: 120\n  }, {\n    x: \"car\",\n    y: 68\n  }, {\n    x: \"moto\",\n    y: 8\n  }, {\n    x: \"bicycle\",\n    y: 176\n  }, {\n    x: \"horse\",\n    y: 23\n  }, {\n    x: \"skateboard\",\n    y: 164\n  }, {\n    x: \"others\",\n    y: 16\n  }]\n}, {\n  id: \"france\",\n  color: \"hsl(264, 70%, 50%)\",\n  data: [{\n    x: \"plane\",\n    y: 103\n  }, {\n    x: \"helicopter\",\n    y: 48\n  }, {\n    x: \"boat\",\n    y: 184\n  }, {\n    x: \"train\",\n    y: 42\n  }, {\n    x: \"subway\",\n    y: 185\n  }, {\n    x: \"bus\",\n    y: 48\n  }, {\n    x: \"car\",\n    y: 73\n  }, {\n    x: \"moto\",\n    y: 85\n  }, {\n    x: \"bicycle\",\n    y: 17\n  }, {\n    x: \"horse\",\n    y: 64\n  }, {\n    x: \"skateboard\",\n    y: 283\n  }, {\n    x: \"others\",\n    y: 226\n  }]\n}, {\n  id: \"us\",\n  color: \"hsl(236, 70%, 50%)\",\n  data: [{\n    x: \"plane\",\n    y: 60\n  }, {\n    x: \"helicopter\",\n    y: 218\n  }, {\n    x: \"boat\",\n    y: 293\n  }, {\n    x: \"train\",\n    y: 96\n  }, {\n    x: \"subway\",\n    y: 114\n  }, {\n    x: \"bus\",\n    y: 276\n  }, {\n    x: \"car\",\n    y: 27\n  }, {\n    x: \"moto\",\n    y: 98\n  }, {\n    x: \"bicycle\",\n    y: 227\n  }, {\n    x: \"horse\",\n    y: 49\n  }, {\n    x: \"skateboard\",\n    y: 169\n  }, {\n    x: \"others\",\n    y: 127\n  }]\n}, {\n  id: \"germany\",\n  color: \"hsl(239, 70%, 50%)\",\n  data: [{\n    x: \"plane\",\n    y: 33\n  }, {\n    x: \"helicopter\",\n    y: 289\n  }, {\n    x: \"boat\",\n    y: 20\n  }, {\n    x: \"train\",\n    y: 147\n  }, {\n    x: \"subway\",\n    y: 140\n  }, {\n    x: \"bus\",\n    y: 273\n  }, {\n    x: \"car\",\n    y: 51\n  }, {\n    x: \"moto\",\n    y: 25\n  }, {\n    x: \"bicycle\",\n    y: 58\n  }, {\n    x: \"horse\",\n    y: 11\n  }, {\n    x: \"skateboard\",\n    y: 228\n  }, {\n    x: \"others\",\n    y: 60\n  }]\n}, {\n  id: \"norway\",\n  color: \"hsl(88, 70%, 50%)\",\n  data: [{\n    x: \"plane\",\n    y: 112\n  }, {\n    x: \"helicopter\",\n    y: 265\n  }, {\n    x: \"boat\",\n    y: 58\n  }, {\n    x: \"train\",\n    y: 52\n  }, {\n    x: \"subway\",\n    y: 289\n  }, {\n    x: \"bus\",\n    y: 299\n  }, {\n    x: \"car\",\n    y: 216\n  }, {\n    x: \"moto\",\n    y: 74\n  }, {\n    x: \"bicycle\",\n    y: 257\n  }, {\n    x: \"horse\",\n    y: 163\n  }, {\n    x: \"skateboard\",\n    y: 125\n  }, {\n    x: \"others\",\n    y: 246\n  }]\n}];\nconst dataBar1 = [{\n  country: \"AD\",\n  \"hot dog\": 183,\n  \"hot dogColor\": \"hsl(305, 70%, 50%)\",\n  burger: 87,\n  burgerColor: \"hsl(155, 70%, 50%)\",\n  sandwich: 74,\n  sandwichColor: \"hsl(195, 70%, 50%)\",\n  kebab: 107,\n  kebabColor: \"hsl(328, 70%, 50%)\",\n  fries: 148,\n  friesColor: \"hsl(212, 70%, 50%)\",\n  donut: 70,\n  donutColor: \"hsl(357, 70%, 50%)\"\n}, {\n  country: \"AE\",\n  \"hot dog\": 104,\n  \"hot dogColor\": \"hsl(299, 70%, 50%)\",\n  burger: 146,\n  burgerColor: \"hsl(165, 70%, 50%)\",\n  sandwich: 58,\n  sandwichColor: \"hsl(7, 70%, 50%)\",\n  kebab: 33,\n  kebabColor: \"hsl(325, 70%, 50%)\",\n  fries: 195,\n  friesColor: \"hsl(297, 70%, 50%)\",\n  donut: 85,\n  donutColor: \"hsl(137, 70%, 50%)\"\n}, {\n  country: \"AF\",\n  \"hot dog\": 162,\n  \"hot dogColor\": \"hsl(92, 70%, 50%)\",\n  burger: 101,\n  burgerColor: \"hsl(101, 70%, 50%)\",\n  sandwich: 145,\n  sandwichColor: \"hsl(28, 70%, 50%)\",\n  kebab: 178,\n  kebabColor: \"hsl(263, 70%, 50%)\",\n  fries: 25,\n  friesColor: \"hsl(80, 70%, 50%)\",\n  donut: 8,\n  donutColor: \"hsl(31, 70%, 50%)\"\n}, {\n  country: \"AG\",\n  \"hot dog\": 63,\n  \"hot dogColor\": \"hsl(19, 70%, 50%)\",\n  burger: 23,\n  burgerColor: \"hsl(25, 70%, 50%)\",\n  sandwich: 168,\n  sandwichColor: \"hsl(64, 70%, 50%)\",\n  kebab: 198,\n  kebabColor: \"hsl(356, 70%, 50%)\",\n  fries: 196,\n  friesColor: \"hsl(219, 70%, 50%)\",\n  donut: 115,\n  donutColor: \"hsl(218, 70%, 50%)\"\n}, {\n  country: \"AI\",\n  \"hot dog\": 189,\n  \"hot dogColor\": \"hsl(254, 70%, 50%)\",\n  burger: 74,\n  burgerColor: \"hsl(175, 70%, 50%)\",\n  sandwich: 154,\n  sandwichColor: \"hsl(52, 70%, 50%)\",\n  kebab: 66,\n  kebabColor: \"hsl(13, 70%, 50%)\",\n  fries: 146,\n  friesColor: \"hsl(291, 70%, 50%)\",\n  donut: 175,\n  donutColor: \"hsl(187, 70%, 50%)\"\n}, {\n  country: \"AL\",\n  \"hot dog\": 130,\n  \"hot dogColor\": \"hsl(57, 70%, 50%)\",\n  burger: 71,\n  burgerColor: \"hsl(253, 70%, 50%)\",\n  sandwich: 156,\n  sandwichColor: \"hsl(76, 70%, 50%)\",\n  kebab: 51,\n  kebabColor: \"hsl(307, 70%, 50%)\",\n  fries: 149,\n  friesColor: \"hsl(90, 70%, 50%)\",\n  donut: 102,\n  donutColor: \"hsl(277, 70%, 50%)\"\n}, {\n  country: \"AM\",\n  \"hot dog\": 56,\n  \"hot dogColor\": \"hsl(146, 70%, 50%)\",\n  burger: 167,\n  burgerColor: \"hsl(315, 70%, 50%)\",\n  sandwich: 78,\n  sandwichColor: \"hsl(96, 70%, 50%)\",\n  kebab: 143,\n  kebabColor: \"hsl(240, 70%, 50%)\",\n  fries: 160,\n  friesColor: \"hsl(286, 70%, 50%)\",\n  donut: 122,\n  donutColor: \"hsl(225, 70%, 50%)\"\n}];\nconst newDataBar = {\n  labels: ['NPL', 'NPA', 'คงเหลือ'],\n  datasets: [{\n    backgroundColor: ['#413ea0', '#F13ea0', '#00DDB8'],\n    data: [10, 20, 30]\n  }]\n};\n\nfunction App() {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"page-guarantee\",\n    className: \"container-fluid py-0 px-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-contain px-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 pt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"title-page\",\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\u0E23\\u0E32\\u0E22\\u0E07\\u0E32\\u0E19\\u0E2A\\u0E23\\u0E38\\u0E1B\\u0E1C\\u0E25\\u0E01\\u0E32\\u0E23\\u0E40\\u0E01\\u0E47\\u0E1A\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E17\\u0E23\\u0E31\\u0E1E\\u0E22\\u0E4C NPL - NPA \"))))), React.createElement(\"div\", {\n    className: \"bg-contain px-4\",\n    style: {\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(ResponsiveLine, {\n    data: dataNivo,\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 50,\n      left: 60\n    },\n    xScale: {\n      type: 'point'\n    },\n    yScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto',\n      stacked: true,\n      reverse: false\n    },\n    yFormat: \" >-.2f\",\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'transportation',\n      legendOffset: 36,\n      legendPosition: 'middle'\n    },\n    axisLeft: {\n      orient: 'left',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'count',\n      legendOffset: -40,\n      legendPosition: 'middle'\n    },\n    pointSize: 10,\n    pointColor: {\n      theme: 'background'\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: 'serieColor'\n    },\n    pointLabelYOffset: -12,\n    useMesh: true,\n    legends: [{\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemBackground: 'rgba(0, 0, 0, .03)',\n          itemOpacity: 1\n        }\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"bg-contain px-4\",\n    style: {\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(ResponsiveBar, {\n    data: dataBar1,\n    keys: ['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut'],\n    indexBy: \"country\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    groupMode: \"grouped\",\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: {\n      scheme: 'nivo'\n    },\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: 'fries'\n      },\n      id: 'dots'\n    }, {\n      match: {\n        id: 'sandwich'\n      },\n      id: 'lines'\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'country',\n      legendPosition: 'middle',\n      legendOffset: 32\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'food',\n      legendPosition: 'middle',\n      legendOffset: -40\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anawin/Desktop/using-react-hooks-with-d3/src/App.js"],"names":["React","useState","useEffect","PropTypes","Doughnut","defaults","ResponsiveLine","ResponsiveBar","ComposedChart","Line","Area","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","dataNivo","id","color","data","x","y","dataBar1","country","burger","burgerColor","sandwich","sandwichColor","kebab","kebabColor","fries","friesColor","donut","donutColor","newDataBar","labels","datasets","backgroundColor","App","textAlign","height","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","round","scheme","background","size","padding","stagger","rotation","lineWidth","spacing","match","modifiers","dataFrom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, PropTypes } from \"react\";\nimport { Doughnut, defaults } from 'react-chartjs-2'\nimport 'chartjs-plugin-datalabels'\nimport \"./App.css\";\n\nimport './styles.css'\nimport { ResponsiveLine } from '@nivo/line'\nimport { ResponsiveBar } from '@nivo/bar'\n\nimport { ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\"\nconst dataNivo = [{id:\"japan\",color:\"hsl(27, 70%, 50%)\",data:[{x:\"plane\",y:65},{x:\"helicopter\",y:240},{x:\"boat\",y:242},{x:\"train\",y:13},{x:\"subway\",y:81},{x:\"bus\",y:120},{x:\"car\",y:68},{x:\"moto\",y:8},{x:\"bicycle\",y:176},{x:\"horse\",y:23},{x:\"skateboard\",y:164},{x:\"others\",y:16}]},{id:\"france\",color:\"hsl(264, 70%, 50%)\",data:[{x:\"plane\",y:103},{x:\"helicopter\",y:48},{x:\"boat\",y:184},{x:\"train\",y:42},{x:\"subway\",y:185},{x:\"bus\",y:48},{x:\"car\",y:73},{x:\"moto\",y:85},{x:\"bicycle\",y:17},{x:\"horse\",y:64},{x:\"skateboard\",y:283},{x:\"others\",y:226}]},{id:\"us\",color:\"hsl(236, 70%, 50%)\",data:[{x:\"plane\",y:60},{x:\"helicopter\",y:218},{x:\"boat\",y:293},{x:\"train\",y:96},{x:\"subway\",y:114},{x:\"bus\",y:276},{x:\"car\",y:27},{x:\"moto\",y:98},{x:\"bicycle\",y:227},{x:\"horse\",y:49},{x:\"skateboard\",y:169},{x:\"others\",y:127}]},{id:\"germany\",color:\"hsl(239, 70%, 50%)\",data:[{x:\"plane\",y:33},{x:\"helicopter\",y:289},{x:\"boat\",y:20},{x:\"train\",y:147},{x:\"subway\",y:140},{x:\"bus\",y:273},{x:\"car\",y:51},{x:\"moto\",y:25},{x:\"bicycle\",y:58},{x:\"horse\",y:11},{x:\"skateboard\",y:228},{x:\"others\",y:60}]},{id:\"norway\",color:\"hsl(88, 70%, 50%)\",data:[{x:\"plane\",y:112},{x:\"helicopter\",y:265},{x:\"boat\",y:58},{x:\"train\",y:52},{x:\"subway\",y:289},{x:\"bus\",y:299},{x:\"car\",y:216},{x:\"moto\",y:74},{x:\"bicycle\",y:257},{x:\"horse\",y:163},{x:\"skateboard\",y:125},{x:\"others\",y:246}]}]\n\nconst dataBar1 = [{country:\"AD\",\"hot dog\":183,\"hot dogColor\":\"hsl(305, 70%, 50%)\",burger:87,burgerColor:\"hsl(155, 70%, 50%)\",sandwich:74,sandwichColor:\"hsl(195, 70%, 50%)\",kebab:107,kebabColor:\"hsl(328, 70%, 50%)\",fries:148,friesColor:\"hsl(212, 70%, 50%)\",donut:70,donutColor:\"hsl(357, 70%, 50%)\"},{country:\"AE\",\"hot dog\":104,\"hot dogColor\":\"hsl(299, 70%, 50%)\",burger:146,burgerColor:\"hsl(165, 70%, 50%)\",sandwich:58,sandwichColor:\"hsl(7, 70%, 50%)\",kebab:33,kebabColor:\"hsl(325, 70%, 50%)\",fries:195,friesColor:\"hsl(297, 70%, 50%)\",donut:85,donutColor:\"hsl(137, 70%, 50%)\"},{country:\"AF\",\"hot dog\":162,\"hot dogColor\":\"hsl(92, 70%, 50%)\",burger:101,burgerColor:\"hsl(101, 70%, 50%)\",sandwich:145,sandwichColor:\"hsl(28, 70%, 50%)\",kebab:178,kebabColor:\"hsl(263, 70%, 50%)\",fries:25,friesColor:\"hsl(80, 70%, 50%)\",donut:8,donutColor:\"hsl(31, 70%, 50%)\"},{country:\"AG\",\"hot dog\":63,\"hot dogColor\":\"hsl(19, 70%, 50%)\",burger:23,burgerColor:\"hsl(25, 70%, 50%)\",sandwich:168,sandwichColor:\"hsl(64, 70%, 50%)\",kebab:198,kebabColor:\"hsl(356, 70%, 50%)\",fries:196,friesColor:\"hsl(219, 70%, 50%)\",donut:115,donutColor:\"hsl(218, 70%, 50%)\"},{country:\"AI\",\"hot dog\":189,\"hot dogColor\":\"hsl(254, 70%, 50%)\",burger:74,burgerColor:\"hsl(175, 70%, 50%)\",sandwich:154,sandwichColor:\"hsl(52, 70%, 50%)\",kebab:66,kebabColor:\"hsl(13, 70%, 50%)\",fries:146,friesColor:\"hsl(291, 70%, 50%)\",donut:175,donutColor:\"hsl(187, 70%, 50%)\"},{country:\"AL\",\"hot dog\":130,\"hot dogColor\":\"hsl(57, 70%, 50%)\",burger:71,burgerColor:\"hsl(253, 70%, 50%)\",sandwich:156,sandwichColor:\"hsl(76, 70%, 50%)\",kebab:51,kebabColor:\"hsl(307, 70%, 50%)\",fries:149,friesColor:\"hsl(90, 70%, 50%)\",donut:102,donutColor:\"hsl(277, 70%, 50%)\"},{country:\"AM\",\"hot dog\":56,\"hot dogColor\":\"hsl(146, 70%, 50%)\",burger:167,burgerColor:\"hsl(315, 70%, 50%)\",sandwich:78,sandwichColor:\"hsl(96, 70%, 50%)\",kebab:143,kebabColor:\"hsl(240, 70%, 50%)\",fries:160,friesColor:\"hsl(286, 70%, 50%)\",donut:122,donutColor:\"hsl(225, 70%, 50%)\"}] \nconst newDataBar = {\n    labels: [\n      'NPL',\n      'NPA',\n      'คงเหลือ'\n    ],\n\n    datasets: [\n      {\n        backgroundColor: ['#413ea0', '#F13ea0', '#00DDB8'],\n        data: [10,20,30]\n      }\n    ]\n  }\n\nfunction App() {\n    \n   \n   \n     \n\n   \n\n    return (\n        <React.Fragment>\n            <div id=\"page-guarantee\" className=\"container-fluid py-0 px-4\">\n                <div className=\"bg-contain px-4\">\n                    <div className=\"row mt-3\">\n                        <div className=\"col-12 pt-4\"\n                        ><h4 className=\"title-page\" style={{textAlign:'center'}}>รายงานสรุปผลการเก็บข้อมูลทรัพย์ NPL - NPA </h4>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n\n          \n            <div className=\"bg-contain px-4\" style={{height:500}}>\n            <ResponsiveLine\n                data={dataNivo}\n                margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n                xScale={{ type: 'point' }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                yFormat=\" >-.2f\"\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'transportation',\n                    legendOffset: 36,\n                    legendPosition: 'middle'\n                }}\n                axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'count',\n                    legendOffset: -40,\n                    legendPosition: 'middle'\n                }}\n                pointSize={10}\n                pointColor={{ theme: 'background' }}\n                pointBorderWidth={2}\n                pointBorderColor={{ from: 'serieColor' }}\n                pointLabelYOffset={-12}\n                useMesh={true}\n                legends={[\n                    {\n                        anchor: 'bottom-right',\n                        direction: 'column',\n                        justify: false,\n                        translateX: 100,\n                        translateY: 0,\n                        itemsSpacing: 0,\n                        itemDirection: 'left-to-right',\n                        itemWidth: 80,\n                        itemHeight: 20,\n                        itemOpacity: 0.75,\n                        symbolSize: 12,\n                        symbolShape: 'circle',\n                        symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                        effects: [\n                            {\n                                on: 'hover',\n                                style: {\n                                    itemBackground: 'rgba(0, 0, 0, .03)',\n                                    itemOpacity: 1\n                                }\n                            }\n                        ]\n                    }\n                ]}\n            />\n            </div>\n            <div className=\"bg-contain px-4\" style={{height:500}}>\n            <ResponsiveBar\n                data={dataBar1}\n                keys={[ 'hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut' ]}\n                indexBy=\"country\"\n                margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n                groupMode=\"grouped\"\n                valueScale={{ type: 'linear' }}\n                indexScale={{ type: 'band', round: true }}\n                colors={{ scheme: 'nivo' }}\n                defs={[\n                    {\n                        id: 'dots',\n                        type: 'patternDots',\n                        background: 'inherit',\n                        color: '#38bcb2',\n                        size: 4,\n                        padding: 1,\n                        stagger: true\n                    },\n                    {\n                        id: 'lines',\n                        type: 'patternLines',\n                        background: 'inherit',\n                        color: '#eed312',\n                        rotation: -45,\n                        lineWidth: 6,\n                        spacing: 10\n                    }\n                ]}\n                fill={[\n                    {\n                        match: {\n                            id: 'fries'\n                        },\n                        id: 'dots'\n                    },\n                    {\n                        match: {\n                            id: 'sandwich'\n                        },\n                        id: 'lines'\n                    }\n                ]}\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'country',\n                    legendPosition: 'middle',\n                    legendOffset: 32\n                }}\n                axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'food',\n                    legendPosition: 'middle',\n                    legendOffset: -40\n                }}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                legends={[\n                    {\n                        dataFrom: 'keys',\n                        anchor: 'bottom-right',\n                        direction: 'column',\n                        justify: false,\n                        translateX: 120,\n                        translateY: 0,\n                        itemsSpacing: 2,\n                        itemWidth: 100,\n                        itemHeight: 20,\n                        itemDirection: 'left-to-right',\n                        itemOpacity: 0.85,\n                        symbolSize: 20,\n                        effects: [\n                            {\n                                on: 'hover',\n                                style: {\n                                    itemOpacity: 1\n                                }\n                            }\n                        ]\n                    }\n                ]}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n            />\n            </div>\n\n\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}